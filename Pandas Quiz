
DataFrame is usually a _______ labeled data structure.

2-D

2-D

Explanation:
DataFrame is a 2-dimensional labeled data structure with columns of potentially different types. You can think of it like a spreadsheet or SQL table, or a dict of Series objects. It is generally the most commonly used pandas object. Like Series, DataFrame accepts many different kinds of input:

Dict of 1D ndarrays, lists, dicts, or Series
2-D numpy.ndarray
Structured or record ndarray
A Series
Another DataFrame
2.
Pandas does easy handling of missing data in floating point as well as non-floating point data?

Yes

Yes

Explanation:
Pandas does easy handling of missing data in floating point as well as non-floating point data.

3.
Pandas is designed to work with _______ data.

Both of these

Both of these

Explanation:
Pandas documentation has explained the use of pandas to work with relational and Labeled data.

4.
Do NumPy arrays take up less memory as compared to Python lists?

Yes

Yes

Explanation:
NumPy arrays have the advantage of taking up less space than Python lists and it is one of the major benefits of using them over lists. If you want a deeper understanding of it kindly go through this link

5.
Are all the elements in NumPy array homogeneous (of same type) in nature?

Yes

Yes

Explanation:
Lets suppose you have a NumPy array as [1,2,3,'sum']. Since NumPy has the powerful property of element-wise operation, lets say you decide to divide this NumPy array by 3. What will result? It will result in an error since 'sum'/3 will give an error. To perform element-wise operations, it is necessary that NumPy arrays should be homogeneous.

6.
_______ is a convenient method for combining the columns of two potentially differently-indexed DataFrames into a single result DataFrame.

join

join

Explanation:
Join columns with other DataFrame either on index or on a key column. Efficiently join multiple DataFrame objects by index at once by passing a list.

7.
What gets printed?

import numpy as np

a = np.array([[1,2,3],[0,1,4]])
b = np.zeros((2,3), dtype=np.int16)
c = np.ones((2,3), dtype=np.int16)
d = a + b + c
print(d[1,2])
5

5

Explanation:
The array b is [[0, 0, 0], [0, 0, 0]] and the array c is [[1, 1, 1], [1, 1, 1]]. The sum d is [[2, 3, 4], [1, 2, 5]]. So, d[1,2] is 5

8.
Dimensions should match along the axis you are _______ on

Concatenating

Concatenating

Explanation:
Pandas documentation explains the use concatenate.

9.
What gets printed?

import numpy as np

a = np.array([1,2,3,4,5])
b = np.arange(0,10,2)
c = a + b
print (c[4])
13

13

Explanation:
The array c is array([ 1, 4, 7, 10, 13]). Therefore, c[4] is 13

10.
Which attribute is used to retrieve column names of a dataframe?

columns

columns

Explanation:
As the name suggests column attribute is used to retrieve column names.

11.
Which of the following operations is not common between Python lists and NumPy arrays?

Vectorization

Vectorization

Explanation:
Indexing, slicing and using for loops are similar for both lists and NumPy arrays. However, NumPy provides the power of vectorization which lists do not.

12.
What gets printed?

import numpy as np

a = np.zeros(6)
b = np.arange(0,10,2)
c = a + b
print (c[4])
Error

Error

Explanation:
There are six elements in a while there are five elements in b. Since NumPy does element-wise operations, the operation a+b is not possible due to shape mismatch.

13.
What gets printed?

import numpy as np

ary = np.array([1,2,3,5,8])

ary = ary + 1

print (ary[1])
3

3

Explanation:
New ary is [2,3,4,6,9]. So, ary[1] is 3

14.
Pivot table can aggregate the data and summarize it by grouping the columns

TRUE

TRUE

Explanation:
A pivot table is a similar operation that is commonly seen in spreadsheets and other programs that operate on tabular data. The pivot table takes simple column-wise data as input, and groups the entries into a two-dimensional table that provides a multidimensional summarization of the data.

15.
What is the output?

a = np.array([[0, 1, 0], [1, 0, 1]])
a += 3
b = a + 3
print (a[1,2] + b[1,2])
11

11

Explanation:
After a+= 3, a = np.array([[3,4,3],[4,3,4]])

And b = np.array([[6, 7, 6], [7, 6, 7]])

So, a[1,2] = 4, b[1,2] = 7, therefore their sum=11

16.
Shape property in pandas is used to

See the number of rows and columns of the data

See the number of rows and columns of the data

Explanation:
It returns a tuple with the first values as the number of rows and the second value as the number of columns.

17.
The _______ method allows us to retrieve rows and columns by position.

iloc

iloc

Explanation:
“iloc” in pandas is used to select rows and columns by number, in the order that they appear in the data frame.

18.
Series can have axis labels and it can be indexed by a label

Yes

Yes

Explanation:
Series can be indexed by a label.

19.
What gets printed?

import numpy as np

a = np.array([[0, 1, 2], [3, 4, 5]])
b = a.sum(axis=1)
print (b)
[3 12]

[3 12]

Explanation:
The argument axis=1 will operate row-wise i.e. it sums up the first element of a i.e. a[0] which is 0+1+2=3. Similarly it will sum up a[1] which comes out as 12. Therefore, the result is [3 12]

20.
What gets printed?

import numpy as np

a = np.array([1,2,3,5,8])
b = np.array([0,3,4,2,1])
c = a + b
c = c*a

print (c[2])
21

21

Explanation:
Final c is array([ 1, 10, 21, 35, 72]). So, c[2] is 2
